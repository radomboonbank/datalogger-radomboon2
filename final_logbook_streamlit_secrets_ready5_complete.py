import streamlit as st
import pandas as pd
import gspread
import json
from datetime import datetime

from google.auth.transport.requests import Request
from google.oauth2.service_account import Credentials


# Load credentials from Streamlit secrets
creds_dict = json.loads(st.secrets["GOOGLE_SERVICE_ACCOUNT"])
scopes = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive"
]
credentials = Credentials.from_service_account_info(creds_dict, scopes=scopes)
credentials.refresh(Request())

try:
    credentials.refresh(Request())
    st.success("‚úÖ Token refresh ‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
except Exception as e:
    st.error(f"Refresh error: {e}")


from google.auth.transport.requests import Request

try:
    credentials.refresh(Request())
    st.success("‚úÖ Token refresh ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
except Exception as e:
    st.error(f"‚ùå Token refresh ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")

client = gspread.authorize(credentials)

# Constants
SHEET_ID = "1bZbgTztJiYz2iIucxOZhTVILhn2ArhIg_38143su0uE"

SHEET_NAME = "checklist_records"


# Open worksheet
sheet = client.open_by_key(SHEET_ID).worksheet(SHEET_NAME)

# Ensure headers exist
headers = sheet.row_values(1)
expected_headers = ["Event ID", "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà", "‡πÄ‡∏ß‡∏•‡∏≤", "‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏∞", "‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤", "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö", "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤"] +     [f"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠{i+1}" for i in range(10)] + [f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞{i+1}" for i in range(10)] + [f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏{i+1}" for i in range(10)]

if headers != expected_headers:
    sheet.insert_row(expected_headers, 1)

# Streamlit UI
st.title("üìã ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô")

with st.form("log_form"):
    date = st.date_input("üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", value=datetime.today())
    time = st.time_input("‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤", value=datetime.now().time())
    employee = st.selectbox("üôã‚Äç‚ôÄÔ∏è ‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", ["‡∏£‡∏î‡∏°‡∏ö‡∏∏‡∏ç ‡∏ó‡∏±‡∏Å‡∏©‡∏ì‡∏≤"])
    receiver = st.selectbox("üôã‚Äç‚ôÇÔ∏è ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏∞", ["‡∏£‡∏î‡∏°‡∏ö‡∏∏‡∏ç ‡∏ó‡∏±‡∏Å‡∏©‡∏ì‡∏≤"])
    shift = st.selectbox("üóÇÔ∏è ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏•‡∏≠‡∏î‡∏™‡∏≠‡∏ö", ["‡∏ï‡∏£‡∏ß‡∏à‡∏•‡∏∞ 00.00 - 08.00 ‡∏ô.", "‡∏ï‡∏£‡∏ß‡∏à‡∏•‡∏∞ 08.00 - 16.00 ‡∏ô.", "‡∏ï‡∏£‡∏ß‡∏à‡∏•‡∏∞ 16.00 - 24.00 ‡∏ô."])
    department = st.selectbox("üè¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö", ["‡πÅ‡∏ú‡∏ô‡∏Å ‡∏´‡∏ñ‡∏Å1‡πÅ‡∏•‡∏∞2", "‡πÅ‡∏ú‡∏ô‡∏Å ‡∏´‡∏ñ‡∏Å3‡πÅ‡∏•‡∏∞4", "‡πÅ‡∏ú‡∏ô‡∏Å ‡∏´‡∏ñ‡∏Å5‡πÅ‡∏•‡∏∞6"])
    note = st.text_area("‚ùó ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤", "‡∏ñ‡πâ‡∏≤‡∏°‡∏µ")

    st.subheader("üîç ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞")
    topics = [
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Alarm All (202)",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö RTU down",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Voltage Deviation (1001)",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö AVC ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô A",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠ Switching Order",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Tag Summary (301)",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Manual Replace",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Low Gas Alarm ‡∏ó‡∏µ‡πà Breaker",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡∏ó‡∏£‡∏¥‡∏õ ‡∏ó‡∏µ‡πà CBD-BESS",
        "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Log Book on Web",
    ]
    
    statuses = []
    reasons = []

    for idx, topic in enumerate(topics):
        st.write(f"{idx+1}. {topic}")
        col1, col2 = st.columns([2, 5])
        with col1:
            status = st.radio("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", ["‡∏õ‡∏Å‡∏ï‡∏¥", "‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥"], key=f"status_{idx}", horizontal=True)
        with col2:
            reason = st.text_input("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡πà‡∏á‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥", key=f"reason_{idx}")
        statuses.append(status)
        reasons.append(reason)

    submitted = st.form_submit_button("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

if submitted:
    event_id = datetime.now().strftime("%Y%m%d%H%M%S")
    row_data = {
        "Event ID": event_id,
        "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà": str(date),
        "‡πÄ‡∏ß‡∏•‡∏≤": str(time),
        "‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô": employee,
        "‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏∞": receiver,
        "‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤": shift,
        "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö": department,
        "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤": note
    }
    for i in range(10):
        row_data[f"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠{i+1}"] = topics[i]
        row_data[f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞{i+1}"] = statuses[i]
        row_data[f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏{i+1}"] = reasons[i]

    sheet.append_row([row_data.get(h, "") for h in expected_headers])
    st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")